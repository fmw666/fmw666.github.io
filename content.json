{"meta":{"title":"范茂伟的个人博客","subtitle":"Stay hungry,Stay foolish","description":"一个大学学生，将自己平时学的一些东西放在上面，希望结交更多的朋友","author":"范茂伟","url":"http://fmw666.github.io"},"pages":[{"title":"[404]","date":"2018-11-03T05:14:47.854Z","updated":"2018-11-03T05:14:47.854Z","comments":true,"path":"404.html","permalink":"http://fmw666.github.io/404.html","excerpt":"","text":""},{"title":"嗨，欢迎您","date":"2018-11-04T07:51:37.821Z","updated":"2018-11-04T07:51:37.821Z","comments":true,"path":"about/index.html","permalink":"http://fmw666.github.io/about/index.html","excerpt":"","text":"茫茫人海能遇见你，是一种缘分。 如果你喜欢我的一些分享，请与我交个朋友吧！"}],"posts":[{"title":"🍭写给刚学计算机的你","slug":"写给刚学计算机的你","date":"2018-12-26T12:24:44.000Z","updated":"2019-01-04T11:52:26.010Z","comments":true,"path":"2018-12-26/写给刚学计算机的你/","link":"","permalink":"http://fmw666.github.io/2018-12-26/写给刚学计算机的你/","excerpt":"","text":"写在最前&ensp;&ensp;&ensp;&ensp;前段时间，一个高中室友在为送他女朋友20岁生日什么礼物而烦恼，然后他出了一本书。我很佩服他这个行为，因为我觉得能写书的人都很酷。可能我这辈子都不会出书了，但是我发现我可以在博客里分享一点点东西也是蛮好的，于是，你成功的看到了这篇文章。&ensp;&ensp;&ensp;&ensp;如果你对我的大篇废话不感兴趣的话，不要心急，请慢慢的往下面看。首先这并不是一份大学计算机脱坑指南，虽然我的标题是《写给刚学计算机的你》。这也不是份大学攻略，更不是什么学霸日记，只是一个普通人，也就是我，成长的一份分享，让你能看到，在你走过的路上，也有别人曾经的步伐，原来每个人都一样。所以我希望你在看我这篇文章的时候不要觉得文章里的我和你很遥远，其实，我们都一样。&ensp;&ensp;&ensp;&ensp;首先自我介绍一下吧，我是一位本科在读的大二学生，学的是计算机科学与技术专业。你可能在想，我一个大二学生，能有什么可靠的建议和有用分享。在此之前，我再重申一遍我的初衷。我写这篇文章的初衷，只是为了向你讲述我这一年的心路历程，以及到今天，回首过去，我的一些想法，让大家在大学迷茫时，能看到往年昨日还有一个像你这么的一个人，也是这么走过来的。&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;提示：整篇内容是基于我一个计算机专业的学生身份来写的，若与读者产生一些价值观或者认知的差异，请原谅。我会把每一part写成一个章节，方便读者的每次游览。pc端位于屏幕右侧设有导航栏，手机端暂时不支持。还有，如果可以，持续更新~ 如果你是刚进校的小白&ensp;&ensp;&ensp;&ensp;有两种人。一种是目标很明确，我要读这个专业，我喜欢，我要学！一种是没接触过，随便报的，计算机？这是啥？&ensp;&ensp;&ensp;&ensp;如果你是前者，那么先恭喜你，你已经比我强了，至少在思想的先知认识上。如果你是后者，那你应该会更懂我的故事，因为，我也一样。先抛开专业院系这种东西，刚进大学的我，怀着一股子满腔热血，什么东西我都想要去尝试，原因很简单，大学前都没尝试过。所以毫无疑问，这将花费我大量的时间去做那些和我专业毫不相干的事请。同时，我也是个不听劝的人，你跟我说大学要怎样怎样，应该做啥，不应该做啥，我都不想care，我自己亲身去经历了，我觉得有意义的就是好的，我觉得没意义的，就是不好的。所以我也算踏遍乱世之路，如今立足这儿的。 ppt、答辩、上台讲话那些事&ensp;&ensp;&ensp;&ensp;主人，请您及时更博~ 考研还是找工作&ensp;&ensp;&ensp;&ensp;主人，请您及时更博~ 推荐一点专业福利吧&ensp;&ensp;&ensp;&ensp;微信公众号：软件安装管家，什么pycharm汉化、许可证啊，java的IntelliJ IEAD集成环境啊，都是免费，而且还是傻瓜式教学安装。 笔者在某一次更文时的内心独白&ensp;&ensp;&ensp;&ensp;我发现我真是那种很难坚持做好一件事的人，写个文章也会一直拖着不更。我对我的自我定位就是：涉猎广泛，而精通不足。什么我都喜欢，而且有着极强的好胜心，也好面子，但我很难坚持做下去。三分钟热度？不，我不喜欢别人这样说我，因为我觉得这样的评价对我不准确，但是我爸就觉得我是三分钟热度的那种。客观来说，我把每件事都当作了我的一个兴趣爱好。其实这段文字本是我的一段自我救赎以及自我欺骗，但都被我删掉了，我觉得没必要去解释那么多。的确，理应有更好的文字，以及更丰富精彩的内容呈现出来，但都由于我的自身原因限制了它的可更完美性。&ensp;&ensp;&ensp;&ensp;好了，不扯这个了，我相信也不是每个人天生就能坚持做一件事持之以恒的，但是为了文章的质量和进度，我还是决定每天晚上11:00–12:00更博500字（毕竟实力有限，每句话需要反复细读、考虑）。","categories":[{"name":"IT","slug":"IT","permalink":"http://fmw666.github.io/categories/IT/"}],"tags":[]},{"title":"《C语言》游戏开发基础","slug":"C语言游戏开发基础","date":"2018-11-28T06:02:20.000Z","updated":"2018-11-29T05:42:29.451Z","comments":true,"path":"2018-11-28/C语言游戏开发基础/","link":"","permalink":"http://fmw666.github.io/2018-11-28/C语言游戏开发基础/","excerpt":"","text":"🚀 《C语言》游戏开发基础 游戏框架搭建12345678910111213// 函数外全局变量定义int main()&#123; startup(); // 数据初始化 while (1) // 游戏循环执行 &#123; show(); // 显示画面 updateWithoutInput(); // 与用户输入无关的更新 updateWithInput(); // 与用户输入有关的更新 &#125; return 0;&#125; 目录功能性 清屏函数 延时函数 停止等待函数 系统自带发出铃声 读取键盘上输入的值(需要回车) 读取键盘上输入的值(不需要回车) 判断是否有键盘输入的函数 产生随机数的函数 光标移动到原点位置进行重画(实现类似于清屏函数的效果) 隐藏光标显示函数 添加背景音乐 计时函数 窗口 修改窗口大小(静态) 修改窗口大小(动态) 固定窗口大小 修改窗体风格 设置指定窗口的显示状态 修改窗口标题 弹出消息框 修改字体颜色、背景颜色 修改文本颜色 修改窗体icon图标 修改窗体透明度 清屏函数 12#include &lt;stdlib.h&gt;system(\"cls\"); 延时函数 12#include &lt;windows.h&gt;Sleep(20); //其中20的单位为毫秒 停止等待函数 12#include &lt;windows.h&gt;system(\"pause\"); 系统自带发出铃声 1printf(\"\\a\"); 读取键盘上输入的值(需要回车) 1234char input;scanf(\"%c\",&amp;input);if(input=='w') printf(\"w\"); 读取键盘上输入的值(不需要回车) 1234567#include&lt;conio.h&gt;char input;//scanf(\"%c\",&amp;input);input = getch();if(input=='w') printf(\"w\"); 判断是否有键盘输入的函数 12#include &lt;conio.h&gt;kbhit(); //若有则返回一个非0值，否则返回0 示例： 123456789101112#include &lt;stdio.h&gt;#include &lt;conio.h&gt;int main()&#123; char input; if(kbhit())&#123; scanf(\"%c\",&amp;input); //需要按下回车键来读取 //input=getch(); printf(\"按下了键\\n\"); &#125;&#125; 123456789101112#include &lt;stdio.h&gt;#include &lt;conio.h&gt;int main()&#123; char input; if(kbhit())&#123; //scanf(\"%c\",&amp;input); input=getch(); //不需要按下回车键来读取 printf(\"按下了键\\n\"); &#125;&#125; 产生随机数的函数 12#include&lt;stdlib.h&gt;rand(); 光标移动到原点位置进行重画(实现类似于清屏函数的效果) 123456789101112131415#include &lt;windows.h&gt;void gotoxy(int x,int y)//类似于清屏函数，光标移动到原点位置进行重画&#123; HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE); COORD pos; pos.X = x; pos.Y = y; SetConsoleCursorPosition(handle,pos);&#125;int main()&#123; gotoxy(0,0);&#125; 隐藏光标显示函数 123456789101112#include &lt;windows.h&gt;void HideCursor()&#123; CONSOLE_CURSOR_INFO cursor_info=&#123;1,0&#125;; //第二个值为0表示隐藏光标 SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE),&amp;cursor_info);&#125;int main()&#123; HideCursor();&#125; 返回目录 修改窗口大小(静态) 12#include &lt;windows.h&gt;system(\"mode con cols=30 lines=20\"); //其中30为宽的值，20为高的值 修改窗口大小(动态) 12345678910111213141516#include&lt;stdio.h&gt;#include&lt;windows.h&gt;void setWinSize(int height,int width)&#123; char str[20]; sprintf(str, \"mode con: cols=%d lines=%d\", height, width); system(str);&#125;int main()&#123; int height, width; scanf(\"%d %d\", &amp;height, &amp;width); //输入高和宽的值 setWinSize(height,width);&#125; 固定窗口大小 123456789101112#include &lt;windows.h&gt;void fixWinSize() &#123; HWND hWnd = GetConsoleWindow(); //获得cmd窗口句柄 RECT rc; GetWindowRect(hWnd, &amp;rc); //获得cmd窗口对应矩形 //改变cmd窗口风格 SetWindowLongPtr(hWnd,GWL_STYLE, GetWindowLong(hWnd, GWL_STYLE) &amp; ~WS_THICKFRAME &amp; ~WS_MAXIMIZEBOX &amp; ~WS_MINIMIZEBOX);&#125;fixWinSize(); 修改窗体风格 12345678910#include &lt;windows.h&gt;void setWinLong()&#123; HWND hwnd = GetConsoleWindow(); LONG Style; //窗口风格 Style = GetWindowLong(hwnd, GWL_STYLE); // 得到窗口风格 Style = Style &amp; ~WS_CAPTION; //去掉标题栏，网上可查选 SetWindowLong(hwnd, GWL_STYLE, Style); //为窗口设置新的风格&#125; 设置指定窗口的显示状态 1234#include &lt;windows.h&gt;ShowWindow(FindWindowA(\"ConsoleWindowClass\",NULL),SW_HIDE); //隐藏窗口ShowWindow(FindWindowA(\"ConsoleWindowClass\",NULL),SW_SHOW); //显示窗口 修改窗口标题 方法一： 12#include &lt;windows.h&gt;SetConsoleTitleA(\"name\"); 方法二： 12#include &lt;windows.h&gt;system(\"title name\"); 弹出消息框 123#include &lt;windows.h&gt;MessageBoxA(0,\"内容\",\"标题\",MB_OK|MB_SYSTEMMODAL); //MB_OK表示有确认键，MB_SYSTEMMODAL表示在窗口置顶 修改字体颜色、背景颜色 方法一： 12345678910111213141516#include &lt;windows.h&gt;system(\"color 07\"); //(07)为默认的黑底白字。其中0为背景色，7为前景色/*颜色属性由两个十六进制数字指定 -- 第一个为背景色，第二个则为前景色。每个数字可以为以下任何值之一:0 = 黑色 8 = 灰色1 = 蓝色 9 = 淡蓝色2 = 绿色 A = 淡绿色3 = 湖蓝色 B = 淡浅绿色4 = 红色 C = 淡红色5 = 紫色 D = 淡紫色6 = 黄色 E = 淡黄色7 = 白色 F = 亮白色*/ 方法二： 123456789#include &lt;windows.h&gt;void SetColor(unsigned short BackGroundColor,unsigned short ForeColor)&#123; HANDLE hCon=GetStdHandle(STD_OUTPUT_HANDLE); SetConsoleTextAttribute(hCon,(ForeColor%16)|(BackGroundColor%16*16));&#125;SetColor(0,7); //(0,7)为默认的黑底白字。其中0为背景色，7为前景色 示例： 123456789101112131415161718192021#include &lt;windows.h&gt;#include &lt;stdio.h&gt;void SetColor(unsigned short BackGroundColor,unsigned short ForeColor)&#123; HANDLE hCon=GetStdHandle(STD_OUTPUT_HANDLE); SetConsoleTextAttribute(hCon,(ForeColor%16)|(BackGroundColor%16*16));&#125;int main()&#123; system(\"color 70\"); printf(\"方法一\\n\"); int i,j; while(scanf(\"%d %d\",&amp;i,&amp;j)) &#123; SetColor(i,j); printf(\"方法二\\n\"); &#125;&#125; 修改文本颜色 12#include &lt;windows.h&gt;SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), 2); //设置颜色 添加背景音乐 1// 只在VC上支持 计数函数 方法一： 1234567891011121314#include &lt;stdio.h&gt;#include &lt;time.h&gt;#include &lt;windows.h&gt;int main()&#123; clock_t start,end; start = clock(); Sleep(2000); end = clock(); printf(\"time=%f\\n\",(double)(end-start)/CLK_TCK);&#125; 方法二： 12345678910111213#include &lt;stdio.h&gt;#include &lt;windows.h&gt;int main()&#123; DWORD end,start; start= GetTickCount(); Sleep(2000); end= GetTickCount(); printf(\"time=%d\\n\",end-start);&#125; 修改字体大小 1//暂未 修改窗体icon图标 1Dev-C++ 新建项目-&gt;`Ctrl+H`(项目属性) 修改窗体透明度 123456789101112131415#include &lt;windows.h&gt;void setWinTransparent()&#123; HWND hwnd = GetConsoleWindow(); int ExdStyle = (int)GetWindowLong(hwnd, GWL_EXSTYLE); //通过SetWindowLong设置窗口的属性，多增加了一个WS_EX_LAYERED支持透明 SetWindowLong(hwnd, GWL_EXSTYLE, ExdStyle | WS_EX_LAYERED); SetLayeredWindowAttributes(GetConsoleWindow(),RGB(255, 255, 255), 200, LWA_ALPHA);//200为透明度值（0-255）&#125;int main()&#123; setWinTransparent();&#125; 键盘输入上下左右，回车确定，Esc退出 12345678910111213141516171819char input;while(1)&#123; input=getch(); if(input==27)&#123; //Esc键ASCII码为27 &#125; if(input==13)&#123; //回车键ASCII码为13 &#125; if(input!=-32) continue; //避免因从键盘上输入的其他无关值影响程序进行 input=getch(); //在读取上下左右ASCII码前必须添加 if(input==72)&#123; //上的ASCII码为72 &#125; if(input==80)&#123; //下的ASCII码为80 &#125; if(input==75)&#123; //左的ASCII码为75 &#125; if(input==77)&#123; //右的ASCII码为77 &#125;&#125; 返回目录","categories":[{"name":"IT","slug":"IT","permalink":"http://fmw666.github.io/categories/IT/"}],"tags":[{"name":"C语言","slug":"C语言","permalink":"http://fmw666.github.io/tags/C语言/"},{"name":"游戏","slug":"游戏","permalink":"http://fmw666.github.io/tags/游戏/"}]},{"title":"git教程","slug":"git教程","date":"2018-11-02T11:18:43.000Z","updated":"2018-11-03T05:54:31.069Z","comments":true,"path":"2018-11-02/git教程/","link":"","permalink":"http://fmw666.github.io/2018-11-02/git教程/","excerpt":"","text":"⚡Git是目前世界上最先进的分布式版本控制系统（没有之一）。 在Windows上安装Git Git官网直接下载安装程序，（网速慢的同学请移步国内镜像） 安装完成后，在开始菜单里找到&quot;Git&quot;-&gt;&quot;Git Bash&quot;,进行如下配置： 12$ git config --global user.name &quot;Your Name&quot; $ git config --global user.email &quot;email@example.com&quot; 生成相应的令牌，本地一份，Github 一份，这样 Github 可以在你使用仓库的时候，进行校验确定你的身份。 123$ cd ~/.ssh$ mkdir key_backup$ ssh-keygen -t rsa -C &quot;email@example.com&quot; 生成如下两个文件： id_rsa.pub 就是我们待会需要的公钥文件，使用命令 $ cat id_rsa.pub 再将内容复制到剪切板，然后进入github账号设置里面添加SSH key 然后输入 $ ssh -T git@github.com 测试连通状态 创建本地仓库 选择一个本地文件夹，用作保存本地仓库文件，尽量是空文件夹。 然后使用命令 $ git init 初始化文件夹。 其实是在当前文件夹下生成一个叫 .git 的隐藏文件夹，里面是一些配置文件，不要随意更改。 使用 $ git clone https://github.com/name/repository.git 将远程仓库克隆到本地此文件夹下。 name 是自己的昵称，repository 是自己的仓库名，不要忘记末尾的 .git 后缀。 然后此文件夹下会多一个和你仓储名一样的文件夹，内部文件与远程仓库一样。 常用命令 1234567$ git add . //添加文件$ git commit -m &quot;commit-messages&quot; //提交本地仓库$ git push origin master //提交远程仓库$ git pull //拉取远程文件，与以下命令类似$ git branch temp //创建本地分支$ git fetch origin master:temp$ git merge master 图床介绍 写博客就无法避免上传图片，图床就是这么一个地方，就是一个网站，你发自己的图片上传到它的网站，然后它给你一个这个图片的链接，插入博客中就能显示图片了。 推荐一个知名的，七牛云https://portal.qiniu.com/，注册完实名认证后有一些优惠。 还有一个神奇的网站：https://sm.ms/，也能用 Hexo+github博客搭建 推荐一个CSDN博主的文章，点击这里 一个git用户很详细的分享，点击这里 当然，官方教程更全面，点击这里 这里分享一篇我的总结，点击这里","categories":[{"name":"IT","slug":"IT","permalink":"http://fmw666.github.io/categories/IT/"}],"tags":[{"name":"git","slug":"git","permalink":"http://fmw666.github.io/tags/git/"},{"name":"后台","slug":"后台","permalink":"http://fmw666.github.io/tags/后台/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-10-31T16:00:00.000Z","updated":"2018-11-02T13:03:04.768Z","comments":true,"path":"2018-11-01/hello-world/","link":"","permalink":"http://fmw666.github.io/2018-11-01/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}