<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>范茂伟的个人博客</title>
  
  <subtitle>Stay hungry,Stay foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://fmw666.github.io/"/>
  <updated>2020-01-25T08:54:00.149Z</updated>
  <id>http://fmw666.github.io/</id>
  
  <author>
    <name>范茂伟</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信抢红包算法实现（Python）</title>
    <link href="http://fmw666.github.io/2020-01-25/%E5%BE%AE%E4%BF%A1%E6%8A%A2%E7%BA%A2%E5%8C%85%E7%AE%97%E6%B3%95%E5%AE%9E%E7%8E%B0/"/>
    <id>http://fmw666.github.io/2020-01-25/微信抢红包算法实现/</id>
    <published>2020-01-24T16:00:00.000Z</published>
    <updated>2020-01-25T08:54:00.149Z</updated>
    
    <content type="html"><![CDATA[<h2 id="💬-写在最前"><a href="#💬-写在最前" class="headerlink" title="💬 写在最前"></a>💬 写在最前</h2><p>&emsp;&emsp;首先，新的一年，祝大家2020鼠年新春快乐啊！</p><p><img src="/intro/money/happy-new-year.jpg" width="200"></p><p>&emsp;&emsp;同时，也希望武汉加油，中国加油，祝大家都能平平安安，健健康康。</p><p><img src="/intro/money/wuhan.jpg" width="400"></p><div align="center"><br><small>图片均来自网络</small><br></div><p><strong><em>(友情提醒，本文除此博客外，作者未在其他平台发布。如要引用，请先与本人取得联系，谢谢理解。)</em></strong></p><p><br></p><h2 id="❔-问题提出"><a href="#❔-问题提出" class="headerlink" title="❔ 问题提出"></a>❔ 问题提出</h2><p>&emsp;&emsp;新春虽然快乐，但我却有了迷惑。</p><p>&emsp;&emsp;什么迷惑呢？</p><p>&emsp;&emsp;相信大家这几天都会发红包，也会抢红包。可是，大家有想过，为什么自己就抢得这么<strong>少</strong>呢?(不会就我一人脸黑吧[手动狗头])</p><p><img src="/intro/money/cut.jpg" width="300"></p><p>&emsp;&emsp;当然，这不是全部重点，重点还有，为什么抢到的有些红包这么吉利呢？(虽然少)</p><p>&emsp;&emsp;比如，20元的红包，有人就会抢到 <code>1.66元</code>，<code>0.88元</code>，等诸如此类”幸运”的数字。</p><p>&emsp;&emsp;然后，我就开始好奇，微信抢红包的算法究竟是怎样实现的?（程序员上线）</p><p><img src="/intro/money/coder.jpg" width="400"></p><p><br></p><h2 id="🔍-开始思考"><a href="#🔍-开始思考" class="headerlink" title="🔍 开始思考"></a>🔍 开始思考</h2><p>&emsp;&emsp;首先，假如一次红包是<code>100元</code>(为了便于计算和理解)，然后红包个数是<code>10个</code>(只发一个就毫无必要计算了，抢就完事儿)，每次最小限额是<code>0.01分</code>(按照微信标准)</p><p>&emsp;&emsp;有人会想，抢红包，不就 <strong>每个人获得剩余红包的一个随机数额</strong> 不就好了吗？(但注意要保证最后一个抢的人至少还有1分钱可以领)</p><p>&emsp;&emsp;打比方，第一个抢红包的人领取的红包数额是<code>0~100元</code>之间的一个随机数额</p><p>&emsp;&emsp;第二个抢红包的人领取的红包数额是<code>0~剩余数额</code>(减去前面的人抢完之后) 之间的一个随机数额</p><p>&emsp;&emsp;依次往下，直到最后一个人抢完。</p><p><img src="/intro/money/perfect.jpg" width="200"></p><p>&emsp;&emsp;但这个时候”手残党”们可能会有意见了，其中会有聪明的人提出质疑：这个方法，只对那些 <strong>优先</strong> 抢红包的人有利，因为抢得越快，获得高金额红包的概率就越大！</p><p>&emsp;&emsp;真是这么回事吗？</p><p>&emsp;&emsp;其实不难发现，对于上述假设，10人平分100元红包，平均每个人能抢到<code>10元</code>钱。而如果采取刚刚那个算法，第一个抢的人则是从0~100的数额之间随机抢到一个大小，那么他能抢到的平均红包数额是<code>50元</code>！后面的人依次红包数额减小。所以，这个算法，仅对优先抢的人有利。正所谓，早起的鸟儿有虫吃，手速快的人，有钱领。</p><p>&emsp;&emsp;<em>（稍微解释一下，我们这里所说的，只是优先抢的人，抢到高额红包的 <strong>概率</strong> 更大！并不是优先抢的人 <strong>一定</strong> 比后面抢的人红包更大）</em></p><p>&emsp;&emsp;咳咳，可是，我们平时用微信抢红包真是这样的吗？</p><p>&emsp;&emsp;通过大家抢红包这么多年的经验看，好像微信抢红包对每一个人都是相对公平的吧？似乎没有区分过先来后到。</p><p>&emsp;&emsp;那么咱是不是就得考虑考虑其他算法了？不过，这个算法难道就不可行吗？我凭单身这么多年的手速，我多抢点钱不好吗？</p><p>&emsp;&emsp;所以，咱们就还是把这个算法用<code>Python</code>实现一下，至少它在某些方面是有可行之处的：</p><p><br></p><h2 id="💡-编程解决"><a href="#💡-编程解决" class="headerlink" title="💡 编程解决"></a>💡 编程解决</h2><ul><li><p>手速快，拿钱概率高 算法：</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 内置随机数模块</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个问题类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Q</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, money=<span class="number">100.0</span>, amount=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 红包大小</span></span><br><span class="line">        self.money = money</span><br><span class="line">        <span class="comment"># 红包数量</span></span><br><span class="line">        self.amount = <span class="number">10</span></span><br><span class="line">        <span class="comment"># 抢红包的人，人数等于红包数量</span></span><br><span class="line">        self.people = [<span class="number">0.0</span>] * amount</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">out</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        由于微信最小金额设置是0.01元，</span></span><br><span class="line"><span class="string">        为方便计算，我们红包数据先统一乘以 100</span></span><br><span class="line"><span class="string">        目的是将可能出现的小数转换为整数。</span></span><br><span class="line"><span class="string">        最后计算完成，再在原来数据上统一除以 100</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.money *= <span class="number">100</span></span><br><span class="line">        <span class="comment"># 循环遍历每个人(开始抢)，但不包括最后一个人</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.amount<span class="number">-1</span>):</span><br><span class="line">            <span class="comment"># 为了保证后面每一个人至少还能领0.01元(*100=1)</span></span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                <span class="comment"># 模拟 do~while 语法</span></span><br><span class="line">                self.people[i] = random.randrange(<span class="number">1</span>, self.money, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> self.money-self.people[i] &gt;= self.amount<span class="number">-1</span>-i:</span><br><span class="line">                    self.money -= self.people[i]</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># 还原数据</span></span><br><span class="line">            self.people[i] /= <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 剩余的钱都是最后一个人的</span></span><br><span class="line">        self.people[<span class="number">-1</span>] = self.money / <span class="number">100</span></span><br><span class="line">        <span class="comment"># 输出</span></span><br><span class="line">        print(self.people)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    q = Q(money=<span class="number">100.00</span>, amount=<span class="number">10</span>)</span><br><span class="line">    q.out()</span><br></pre></td></tr></table></figure></li><li><p>我们模拟20次输出（红包大小：100元，红包数量：10个），能发现，红包最后几个抢的人，是真的惨！（有兴趣的小伙伴，可以用这个代码多实现几次模拟数据，用于一些统计需求）</p></li></ul><div align="center"><br>    <small>表格数据</small><br></div><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center"><strong>1.</strong></td><td style="text-align:center">79.93</td><td style="text-align:center">9.63</td><td style="text-align:center">4.65</td><td style="text-align:center">2.54</td><td style="text-align:center">0.47</td><td style="text-align:center">0.93</td><td style="text-align:center">0.64</td><td style="text-align:center">0.41</td><td style="text-align:center">0.01</td><td style="text-align:center">0.79</td></tr><tr><td style="text-align:center"><strong>2.</strong></td><td style="text-align:center">9.45</td><td style="text-align:center">89.06</td><td style="text-align:center">1.13</td><td style="text-align:center">0.04</td><td style="text-align:center">0.2</td><td style="text-align:center">0.04</td><td style="text-align:center">0.02</td><td style="text-align:center">0.04</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"><strong>3.</strong></td><td style="text-align:center">23.85</td><td style="text-align:center">67.55</td><td style="text-align:center">2.06</td><td style="text-align:center">5.61</td><td style="text-align:center">0.52</td><td style="text-align:center">0.34</td><td style="text-align:center">0.03</td><td style="text-align:center">0.01</td><td style="text-align:center">0.02</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"><strong>4.</strong></td><td style="text-align:center">80.07</td><td style="text-align:center">0.57</td><td style="text-align:center">16.13</td><td style="text-align:center">1.72</td><td style="text-align:center">1.43</td><td style="text-align:center">0.02</td><td style="text-align:center">0.02</td><td style="text-align:center">0.01</td><td style="text-align:center">0.02</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"><strong>5.</strong></td><td style="text-align:center">39.29</td><td style="text-align:center">0.18</td><td style="text-align:center">13.05</td><td style="text-align:center">46.24</td><td style="text-align:center">0.68</td><td style="text-align:center">0.18</td><td style="text-align:center">0.22</td><td style="text-align:center">0.03</td><td style="text-align:center">0.04</td><td style="text-align:center">0.09</td></tr><tr><td style="text-align:center"><strong>6.</strong></td><td style="text-align:center">71.5</td><td style="text-align:center">17.01</td><td style="text-align:center">8.53</td><td style="text-align:center">0.75</td><td style="text-align:center">1.77</td><td style="text-align:center">0.36</td><td style="text-align:center">0.05</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"><strong>7.</strong></td><td style="text-align:center">48.0</td><td style="text-align:center">1.47</td><td style="text-align:center">9.7</td><td style="text-align:center">1.92</td><td style="text-align:center">10.15</td><td style="text-align:center">27.14</td><td style="text-align:center">0.49</td><td style="text-align:center">0.35</td><td style="text-align:center">0.74</td><td style="text-align:center">0.04</td></tr><tr><td style="text-align:center"><strong>8.</strong></td><td style="text-align:center">56.67</td><td style="text-align:center">0.54</td><td style="text-align:center">5.08</td><td style="text-align:center">24.82</td><td style="text-align:center">4.3</td><td style="text-align:center">6.51</td><td style="text-align:center">0.83</td><td style="text-align:center">1.06</td><td style="text-align:center">0.05</td><td style="text-align:center">0.14</td></tr><tr><td style="text-align:center"><strong>9.</strong></td><td style="text-align:center">64.13</td><td style="text-align:center">2.65</td><td style="text-align:center">19.91</td><td style="text-align:center">9.6</td><td style="text-align:center">0.41</td><td style="text-align:center">1.36</td><td style="text-align:center">1.82</td><td style="text-align:center">0.04</td><td style="text-align:center">0.03</td><td style="text-align:center">0.05</td></tr><tr><td style="text-align:center"><strong>10.</strong></td><td style="text-align:center">81.75</td><td style="text-align:center">6.85</td><td style="text-align:center">8.45</td><td style="text-align:center">0.29</td><td style="text-align:center">0.46</td><td style="text-align:center">1.06</td><td style="text-align:center">0.99</td><td style="text-align:center">0.02</td><td style="text-align:center">0.12</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"><strong>11.</strong></td><td style="text-align:center">61.24</td><td style="text-align:center">12.78</td><td style="text-align:center">12.44</td><td style="text-align:center">8.22</td><td style="text-align:center">3.6</td><td style="text-align:center">0.88</td><td style="text-align:center">0.04</td><td style="text-align:center">0.44</td><td style="text-align:center">0.11</td><td style="text-align:center">0.25</td></tr><tr><td style="text-align:center"><strong>12.</strong></td><td style="text-align:center">42.43</td><td style="text-align:center">5.23</td><td style="text-align:center">14.21</td><td style="text-align:center">26.55</td><td style="text-align:center">6.64</td><td style="text-align:center">3.87</td><td style="text-align:center">0.93</td><td style="text-align:center">0.1</td><td style="text-align:center">0.02</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:center"><strong>13.</strong></td><td style="text-align:center">18.14</td><td style="text-align:center">49.41</td><td style="text-align:center">10.03</td><td style="text-align:center">13.62</td><td style="text-align:center">0.62</td><td style="text-align:center">4.89</td><td style="text-align:center">1.67</td><td style="text-align:center">0.71</td><td style="text-align:center">0.35</td><td style="text-align:center">0.56</td></tr><tr><td style="text-align:center"><strong>14.</strong></td><td style="text-align:center">61.72</td><td style="text-align:center">0.23</td><td style="text-align:center">24.47</td><td style="text-align:center">4.32</td><td style="text-align:center">7.97</td><td style="text-align:center">0.46</td><td style="text-align:center">0.32</td><td style="text-align:center">0.44</td><td style="text-align:center">0.04</td><td style="text-align:center">0.03</td></tr><tr><td style="text-align:center"><strong>15.</strong></td><td style="text-align:center">21.97</td><td style="text-align:center">8.93</td><td style="text-align:center">6.02</td><td style="text-align:center">23.73</td><td style="text-align:center">1.77</td><td style="text-align:center">4.55</td><td style="text-align:center">1.08</td><td style="text-align:center">1.71</td><td style="text-align:center">3.65</td><td style="text-align:center">26.59</td></tr><tr><td style="text-align:center"><strong>16.</strong></td><td style="text-align:center">84.32</td><td style="text-align:center">5.34</td><td style="text-align:center">5.62</td><td style="text-align:center">0.55</td><td style="text-align:center">2.2</td><td style="text-align:center">0.73</td><td style="text-align:center">0.34</td><td style="text-align:center">0.79</td><td style="text-align:center">0.05</td><td style="text-align:center">0.06</td></tr><tr><td style="text-align:center"><strong>17.</strong></td><td style="text-align:center">4.93</td><td style="text-align:center">35.89</td><td style="text-align:center">48.15</td><td style="text-align:center">5.01</td><td style="text-align:center">5.41</td><td style="text-align:center">0.26</td><td style="text-align:center">0.24</td><td style="text-align:center">0.08</td><td style="text-align:center">0.01</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:center"><strong>18.</strong></td><td style="text-align:center">95.78</td><td style="text-align:center">1.98</td><td style="text-align:center">1.89</td><td style="text-align:center">0.06</td><td style="text-align:center">0.12</td><td style="text-align:center">0.06</td><td style="text-align:center">0.06</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.03</td></tr><tr><td style="text-align:center"><strong>19.</strong></td><td style="text-align:center">0.53</td><td style="text-align:center">32.19</td><td style="text-align:center">31.53</td><td style="text-align:center">3.17</td><td style="text-align:center">7.36</td><td style="text-align:center">23.21</td><td style="text-align:center">1.63</td><td style="text-align:center">0.31</td><td style="text-align:center">0.05</td><td style="text-align:center">0.02</td></tr><tr><td style="text-align:center"><strong>20.</strong></td><td style="text-align:center">54.4</td><td style="text-align:center">21.27</td><td style="text-align:center">17.67</td><td style="text-align:center">6.58</td><td style="text-align:center">0.03</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td><td style="text-align:center">0.01</td></tr><tr><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong>平均</strong></td><td style="text-align:center">50.005</td><td style="text-align:center">18.438</td><td style="text-align:center">13.036</td><td style="text-align:center">9.267</td><td style="text-align:center">2.806</td><td style="text-align:center">3.843</td><td style="text-align:center">0.572</td><td style="text-align:center">0.329</td><td style="text-align:center">0.267</td><td style="text-align:center">1.438</td></tr></tbody></table><p><br></p><p>&emsp;&emsp;现在我要模拟微信抢红包实现方式，即，咱不靠手速，纯靠运气，可以不。（可以是可以，不过我想插一句，如果红包个数一共就那么多个，因为你手速慢，而别人抢完了，何不多练练自己手速？）</p><p><br></p><h3 id="如何才能公平？"><a href="#如何才能公平？" class="headerlink" title="如何才能公平？"></a>如何才能公平？</h3><p>&emsp;&emsp;我们思考这个问题，可以把<code>100元</code>拟作成一条直线，<code>10个人</code>可以拟作成直线上不重合的<code>9个点</code>。即，我们可以在直线上随机取<code>9个</code>不重合的点，把直线随机分成<code>10段</code>，抢红包的人可以依次“获得”直线的每一段，直线的长度就是我们抢到的红包大小！</p><p><img src="/intro/money/pic.png" width="1000"></p><blockquote><p>&emsp;&emsp;<strong>特别说明：</strong>本“抢红包算法”只是作者提出的一种可行思路，并不代表微信实际开发团队使用如此。微信开发团队使用的是什么算法我也不知道=.=</p></blockquote><h3 id="编程实现"><a href="#编程实现" class="headerlink" title="编程实现"></a>编程实现</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 内置随机数模块</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个问题类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Q</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, money=<span class="number">100.0</span>, amount=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 红包大小</span></span><br><span class="line">        self.money = money</span><br><span class="line">        <span class="comment"># 红包数量</span></span><br><span class="line">        self.amount = <span class="number">10</span></span><br><span class="line">        <span class="comment"># 结点数，等于红包数量-1</span></span><br><span class="line">        self.node = [<span class="number">0</span>] * (amount - <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 抢红包的人，人数等于红包数量</span></span><br><span class="line">        self.people = [<span class="number">0.0</span>] * amount</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">out</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        由于微信最小金额设置是0.01元，</span></span><br><span class="line"><span class="string">        为方便计算，我们红包数据先统一乘以 100</span></span><br><span class="line"><span class="string">        目的是将可能出现的小数转换为整数。</span></span><br><span class="line"><span class="string">        最后计算完成，再在原来数据上统一除以 100</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.money *= <span class="number">100</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.amount<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                <span class="comment"># 模拟 do~while 语法</span></span><br><span class="line">                n = random.randrange(<span class="number">1</span>, self.money, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> n <span class="keyword">not</span> <span class="keyword">in</span> self.node:</span><br><span class="line">                    <span class="comment"># 新生成的随机结点不在 node 列表中则满足</span></span><br><span class="line">                    self.node[i] = n</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># 对结点进行升序排序</span></span><br><span class="line">        self.node.sort()</span><br><span class="line">        <span class="comment"># 根据结点间长度生成每人红包大小</span></span><br><span class="line">        self.people[<span class="number">0</span>] = self.node[<span class="number">0</span>] / <span class="number">100</span></span><br><span class="line">        self.people[<span class="number">-1</span>] = (self.money - self.node[<span class="number">-1</span>]) / <span class="number">100</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, self.amount<span class="number">-1</span>):</span><br><span class="line">            self.people[i] = (self.node[i] - self.node[i<span class="number">-1</span>]) / <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 输出</span></span><br><span class="line">        print(self.people)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    q = Q(money=<span class="number">100.00</span>, amount=<span class="number">10</span>)</span><br><span class="line">    q.out()</span><br></pre></td></tr></table></figure><h3 id="模拟输出分析"><a href="#模拟输出分析" class="headerlink" title="模拟输出分析"></a>模拟输出分析</h3><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">1</th><th style="text-align:center">2</th><th style="text-align:center">3</th><th style="text-align:center">4</th><th style="text-align:center">5</th><th style="text-align:center">6</th><th style="text-align:center">7</th><th style="text-align:center">8</th><th style="text-align:center">9</th><th style="text-align:center">10</th></tr></thead><tbody><tr><td style="text-align:center"><strong>1.</strong></td><td style="text-align:center">4.2</td><td style="text-align:center">4.3</td><td style="text-align:center">0.2</td><td style="text-align:center">32.06</td><td style="text-align:center">6.54</td><td style="text-align:center">26.6</td><td style="text-align:center">8.13</td><td style="text-align:center">15.15</td><td style="text-align:center">2.04</td><td style="text-align:center">0.78</td></tr><tr><td style="text-align:center"><strong>2.</strong></td><td style="text-align:center">20.63</td><td style="text-align:center">17.94</td><td style="text-align:center">2.87</td><td style="text-align:center">7.44</td><td style="text-align:center">3.97</td><td style="text-align:center">4.04</td><td style="text-align:center">2.61</td><td style="text-align:center">9.4</td><td style="text-align:center">5.15</td><td style="text-align:center">25.95</td></tr><tr><td style="text-align:center"><strong>3.</strong></td><td style="text-align:center">20.07</td><td style="text-align:center">4.17</td><td style="text-align:center">21.27</td><td style="text-align:center">2.75</td><td style="text-align:center">7.03</td><td style="text-align:center">7.43</td><td style="text-align:center">19.61</td><td style="text-align:center">2.82</td><td style="text-align:center">11.13</td><td style="text-align:center">3.72</td></tr><tr><td style="text-align:center"><strong>4.</strong></td><td style="text-align:center">8.55</td><td style="text-align:center">12.49</td><td style="text-align:center">11.0</td><td style="text-align:center">8.9</td><td style="text-align:center">20.6</td><td style="text-align:center">3.65</td><td style="text-align:center">0.27</td><td style="text-align:center">16.04</td><td style="text-align:center">9.22</td><td style="text-align:center">9.28</td></tr><tr><td style="text-align:center"><strong>5.</strong></td><td style="text-align:center">10.16</td><td style="text-align:center">11.84</td><td style="text-align:center">5.37</td><td style="text-align:center">5.38</td><td style="text-align:center">3.75</td><td style="text-align:center">2.45</td><td style="text-align:center">19.53</td><td style="text-align:center">10.6</td><td style="text-align:center">20.97</td><td style="text-align:center">9.95</td></tr><tr><td style="text-align:center"><strong>6.</strong></td><td style="text-align:center">25.76</td><td style="text-align:center">14.73</td><td style="text-align:center">4.44</td><td style="text-align:center">3.78</td><td style="text-align:center">4.61</td><td style="text-align:center">8.38</td><td style="text-align:center">0.69</td><td style="text-align:center">2.71</td><td style="text-align:center">21.19</td><td style="text-align:center">13.71</td></tr><tr><td style="text-align:center"><strong>7.</strong></td><td style="text-align:center">1.48</td><td style="text-align:center">31.14</td><td style="text-align:center">2.96</td><td style="text-align:center">2.01</td><td style="text-align:center">13.08</td><td style="text-align:center">14.28</td><td style="text-align:center">5.87</td><td style="text-align:center">9.94</td><td style="text-align:center">13.67</td><td style="text-align:center">5.57</td></tr><tr><td style="text-align:center"><strong>8.</strong></td><td style="text-align:center">7.21</td><td style="text-align:center">22.63</td><td style="text-align:center">0.64</td><td style="text-align:center">6.81</td><td style="text-align:center">20.79</td><td style="text-align:center">9.2</td><td style="text-align:center">6.43</td><td style="text-align:center">4.44</td><td style="text-align:center">17.44</td><td style="text-align:center">4.41</td></tr><tr><td style="text-align:center"><strong>9.</strong></td><td style="text-align:center">9.36</td><td style="text-align:center">3.17</td><td style="text-align:center">35.82</td><td style="text-align:center">1.17</td><td style="text-align:center">12.51</td><td style="text-align:center">15.12</td><td style="text-align:center">8.13</td><td style="text-align:center">4.46</td><td style="text-align:center">2.59</td><td style="text-align:center">7.67</td></tr><tr><td style="text-align:center"><strong>10.</strong></td><td style="text-align:center">5.1</td><td style="text-align:center">5.28</td><td style="text-align:center">1.92</td><td style="text-align:center">8.2</td><td style="text-align:center">8.96</td><td style="text-align:center">10.21</td><td style="text-align:center">32.12</td><td style="text-align:center">1.58</td><td style="text-align:center">26.36</td><td style="text-align:center">0.27</td></tr><tr><td style="text-align:center"><strong>11.</strong></td><td style="text-align:center">3.1</td><td style="text-align:center">2.72</td><td style="text-align:center">1.48</td><td style="text-align:center">45.51</td><td style="text-align:center">1.9</td><td style="text-align:center">4.2</td><td style="text-align:center">19.38</td><td style="text-align:center">11.33</td><td style="text-align:center">8.39</td><td style="text-align:center">1.99</td></tr><tr><td style="text-align:center"><strong>12.</strong></td><td style="text-align:center">4.09</td><td style="text-align:center">2.22</td><td style="text-align:center">9.43</td><td style="text-align:center">2.11</td><td style="text-align:center">31.25</td><td style="text-align:center">2.06</td><td style="text-align:center">6.41</td><td style="text-align:center">5.79</td><td style="text-align:center">32.19</td><td style="text-align:center">4.45</td></tr><tr><td style="text-align:center"><strong>13.</strong></td><td style="text-align:center">14.04</td><td style="text-align:center">11.56</td><td style="text-align:center">2.83</td><td style="text-align:center">4.45</td><td style="text-align:center">6.54</td><td style="text-align:center">6.5</td><td style="text-align:center">5.77</td><td style="text-align:center">5.85</td><td style="text-align:center">21.27</td><td style="text-align:center">21.19</td></tr><tr><td style="text-align:center"><strong>14.</strong></td><td style="text-align:center">2.57</td><td style="text-align:center">0.61</td><td style="text-align:center">32.13</td><td style="text-align:center">8.6</td><td style="text-align:center">12.36</td><td style="text-align:center">8.33</td><td style="text-align:center">7.89</td><td style="text-align:center">11.98</td><td style="text-align:center">10.88</td><td style="text-align:center">4.65</td></tr><tr><td style="text-align:center"><strong>15.</strong></td><td style="text-align:center">12.64</td><td style="text-align:center">15.44</td><td style="text-align:center">1.28</td><td style="text-align:center">0.15</td><td style="text-align:center">3.18</td><td style="text-align:center">23.68</td><td style="text-align:center">17.97</td><td style="text-align:center">9.65</td><td style="text-align:center">3.43</td><td style="text-align:center">12.58</td></tr><tr><td style="text-align:center"><strong>16.</strong></td><td style="text-align:center">5.5</td><td style="text-align:center">11.73</td><td style="text-align:center">16.35</td><td style="text-align:center">0.47</td><td style="text-align:center">10.99</td><td style="text-align:center">13.77</td><td style="text-align:center">6.28</td><td style="text-align:center">26.55</td><td style="text-align:center">4.47</td><td style="text-align:center">3.89</td></tr><tr><td style="text-align:center"><strong>17.</strong></td><td style="text-align:center">9.21</td><td style="text-align:center">0.87</td><td style="text-align:center">0.53</td><td style="text-align:center">5.93</td><td style="text-align:center">12.25</td><td style="text-align:center">8.33</td><td style="text-align:center">12.44</td><td style="text-align:center">0.83</td><td style="text-align:center">44.65</td><td style="text-align:center">4.96</td></tr><tr><td style="text-align:center"><strong>18.</strong></td><td style="text-align:center">5.81</td><td style="text-align:center">4.78</td><td style="text-align:center">19.94</td><td style="text-align:center">8.17</td><td style="text-align:center">2.26</td><td style="text-align:center">0.64</td><td style="text-align:center">15.44</td><td style="text-align:center">0.36</td><td style="text-align:center">7.98</td><td style="text-align:center">34.62</td></tr><tr><td style="text-align:center"><strong>19.</strong></td><td style="text-align:center">8.32</td><td style="text-align:center">17.92</td><td style="text-align:center">4.21</td><td style="text-align:center">5.09</td><td style="text-align:center">0.99</td><td style="text-align:center">3.18</td><td style="text-align:center">12.76</td><td style="text-align:center">17.56</td><td style="text-align:center">27.33</td><td style="text-align:center">2.64</td></tr><tr><td style="text-align:center"><strong>20.</strong></td><td style="text-align:center">28.29</td><td style="text-align:center">2.91</td><td style="text-align:center">2.25</td><td style="text-align:center">23.93</td><td style="text-align:center">10.0</td><td style="text-align:center">22.27</td><td style="text-align:center">0.16</td><td style="text-align:center">3.63</td><td style="text-align:center">0.36</td><td style="text-align:center">6.2</td></tr><tr><td style="text-align:center"></td></tr><tr><td style="text-align:center"><strong>平均</strong></td><td style="text-align:center">10.304</td><td style="text-align:center">9.923</td><td style="text-align:center">8.846</td><td style="text-align:center">9.146</td><td style="text-align:center">9.678</td><td style="text-align:center">9.716</td><td style="text-align:center">10.394</td><td style="text-align:center">8.534</td><td style="text-align:center">14.535</td><td style="text-align:center">8.924</td></tr></tbody></table><blockquote><p>可以看到，只要样本数量足够大，每个人平均都能获得10元钱。即不分先后，抢到红包的人运气都“一样”</p></blockquote><p><br></p><h2 id="💸-程序优化"><a href="#💸-程序优化" class="headerlink" title="💸 程序优化"></a>💸 程序优化</h2><p>&emsp;&emsp;通过上述算法，我们的确实现了 <strong>对于每个抢到红包的人，不分先后的获得了一个随机红包大小</strong>。但是，我们还没有实现红包数额的 <strong>“吉利化”</strong>。</p><p>&emsp;&emsp;（其实通过样本数据我们能看到，每一次红包分配出的金额里，都会有几个相对吉利的数字。吉不吉利主要也是看人们的心态，虽然我并不知道微信抢红包算法是如何实现，但是我觉得此算法已经可以使用）</p><p>&emsp;&emsp;——“所以你就不想实现红包数额的‘吉利化’了吗？你就想偷懒了吗？”</p><p>&emsp;&emsp;——“不不不，纵使我觉得上述算法已经可以，但是大过年的，我还是希望每个抢到红包的人都能获得一个相对吉利的红包数额！”</p><p><img src="/intro/money/kua.jpg" width="250"></p><h3 id="如何取得更多的吉利数字？"><a href="#如何取得更多的吉利数字？" class="headerlink" title="如何取得更多的吉利数字？"></a>如何取得更多的吉利数字？</h3><p>&emsp;&emsp;像，<code>6</code>、<code>8</code>、<code>9</code>，包括<code>1</code>（幺，等同于“要”）这样的数字，是大家普遍比较喜爱的。我们要让这些数字尽可能多的出现在我们抢到的红包数额中。</p><p>&emsp;&emsp;但是发的红包数额如果相对较大，别人抢到大红包的概率也越大。我们这里先做一个 <strong>“约定”：抢到10元以上红包的人，就不考虑将其数字吉利化了，因为抢到10元红包以上的人，我相信不会特别在乎是不是10.66元或者18.88元，从金额上说，他们大概率也都满足了，所以我们只对那些只抢到10元以下红包的人做数字吉利化。</strong>（这也是为了方便行事，说白也算是一种偷懒=。=）</p><p>&emsp;&emsp;所以，这个问题就被我们 <ruby>简<rp>(</rp><rt>tou</rt><rp>)</rp></ruby> <ruby>化<rp>(</rp><rt>lan</rt><rp>)</rp></ruby> 成：对抢到的10元以下红包，多加入<code>1</code>、<code>6</code>、<code>8</code>、<code>9</code>这样的数字（如 0.66、0.68、0.88、1.68、1.99……）</p><p><img src="/intro/money/think.jpg" width="250"></p><p>&emsp;&emsp;这里有两种考虑模式：<strong>1.“被动”选择</strong>、<strong>2.“主动”选择</strong>（其中 “被动”选择 不考虑上述 约定，其 约定 主要用于 “主动”选择）</p><h4 id="1-“被动”选择"><a href="#1-“被动”选择" class="headerlink" title="1. “被动”选择"></a>1. “被动”选择</h4><p>&emsp;&emsp;何为“被动”选择？即我们按照上述第二种算法，照常算出一组结果（用列表或数组存储）。再对每个人抢到的红包数额做分析，如果出现 吉利数 的频次符合我们的预期，则保留我们这组结果，否则，重新获取一组新的结果。循环直到满足退出。</p><blockquote><p>&emsp;&emsp;<strong>注意：</strong> 这样的编程逻辑虽然很简单，但是要使用到我们的 do~while 直到型循环，而 Python 中并不提供这样的原生语法，所以我们只能通过语法逻辑，自己构建。</p></blockquote><p>&emsp;&emsp;这样的算法模式，优点是，不需要我们去做大量的前期数据处理工作，用大量的随机结果去满足我们需要的条件。很明显，对比于后面我们要讲的“主动”选择，会提高大量的时间复杂度！</p><p>&emsp;&emsp;下面就结合上述第二例代码来实现一下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Python 内置随机数模块</span></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个幸运数类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lucky</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, lucky_numbers=[])</span>:</span></span><br><span class="line">        <span class="comment"># 默认 1,6,8,9 是幸运数</span></span><br><span class="line">        self.lucky_numbers = [<span class="number">1</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br><span class="line">        <span class="comment"># 用户可以提供其他幸运数</span></span><br><span class="line">        self.lucky_numbers += lucky_numbers</span><br><span class="line">        <span class="comment"># 消去重复元素，先取其集合，再取其列表</span></span><br><span class="line">        self.lucky_numbers = list(set(self.lucky_numbers))</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 是否是幸运数</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_lucky</span><span class="params">(self, number)</span>:</span></span><br><span class="line">        <span class="comment"># 使用仿三元表达式 ?:</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> number <span class="keyword">in</span> self.lucky_numbers <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义一个问题类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Q</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="comment"># 初始化</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, money=<span class="number">100.0</span>, amount=<span class="number">10</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 红包大小</span></span><br><span class="line">        self.money = money</span><br><span class="line">        <span class="comment"># 红包数量</span></span><br><span class="line">        self.amount = <span class="number">10</span></span><br><span class="line">        <span class="comment"># 结点数，等于红包数量-1</span></span><br><span class="line">        self.node = [<span class="number">0</span>] * (amount - <span class="number">1</span>)</span><br><span class="line">        <span class="comment"># 抢红包的人，人数等于红包数量</span></span><br><span class="line">        self.people = [<span class="number">0.0</span>] * amount</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 计算</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">out</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="string">'''</span></span><br><span class="line"><span class="string">        由于微信最小金额设置是0.01元，</span></span><br><span class="line"><span class="string">        为方便计算，我们红包数据先统一乘以 100</span></span><br><span class="line"><span class="string">        目的是将可能出现的小数转换为整数。</span></span><br><span class="line"><span class="string">        最后计算完成，再在原来数据上统一除以 100</span></span><br><span class="line"><span class="string">        '''</span></span><br><span class="line">        self.money *= <span class="number">100</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(self.amount<span class="number">-1</span>):</span><br><span class="line">            <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">                <span class="comment"># 模拟 do~while 语法</span></span><br><span class="line">                n = random.randrange(<span class="number">1</span>, self.money, <span class="number">1</span>)</span><br><span class="line">                <span class="keyword">if</span> n <span class="keyword">not</span> <span class="keyword">in</span> self.node:</span><br><span class="line">                    <span class="comment"># 新生成的随机结点不在 node 列表中则满足</span></span><br><span class="line">                    self.node[i] = n</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 对结点进行升序排序</span></span><br><span class="line">        self.node.sort()</span><br><span class="line">        <span class="comment"># 根据结点间长度生成每人红包大小</span></span><br><span class="line">        self.people[<span class="number">0</span>] = self.node[<span class="number">0</span>] / <span class="number">100</span></span><br><span class="line">        self.people[<span class="number">-1</span>] = (self.money - self.node[<span class="number">-1</span>]) / <span class="number">100</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, self.amount<span class="number">-1</span>):</span><br><span class="line">            self.people[i] = (self.node[i] - self.node[i<span class="number">-1</span>]) / <span class="number">100</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 输出</span></span><br><span class="line">        <span class="keyword">return</span> self.people</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    <span class="comment"># 实例化 Lucky 类</span></span><br><span class="line">    l = Lucky()</span><br><span class="line">    <span class="comment"># 预期达到频次</span></span><br><span class="line">    freq = <span class="number">0.5</span></span><br><span class="line">    <span class="comment"># 红包结果</span></span><br><span class="line">    results = []</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 模拟 do~while 语法</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        <span class="comment"># 满足幸运数个数</span></span><br><span class="line">        count = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 数字总数</span></span><br><span class="line">        total = <span class="number">0</span></span><br><span class="line">        <span class="comment"># 实例化 Q 类</span></span><br><span class="line">        q = Q(money=<span class="number">100.00</span>, amount=<span class="number">10</span>)</span><br><span class="line">        results = q.out()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 取得每个人红包数额</span></span><br><span class="line">        <span class="keyword">for</span> r <span class="keyword">in</span> results:</span><br><span class="line">            <span class="comment"># 对红包数额字符串化(乘以100消去小数点)</span></span><br><span class="line">            string = str(int(r*<span class="number">100</span>))</span><br><span class="line">            <span class="comment"># 取得字符串中每个字符</span></span><br><span class="line">            <span class="keyword">for</span> char <span class="keyword">in</span> string:</span><br><span class="line">                <span class="comment"># 字符转数字</span></span><br><span class="line">                num = int(char)</span><br><span class="line">                <span class="keyword">if</span> l.is_lucky(num):</span><br><span class="line">                    count += <span class="number">1</span></span><br><span class="line">                total += <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># 满足频次则退出</span></span><br><span class="line">        <span class="keyword">if</span> count / total &gt; freq:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输出</span></span><br><span class="line">    print(results)</span><br></pre></td></tr></table></figure><h4 id="2-“主动”选择"><a href="#2-“主动”选择" class="headerlink" title="2. “主动”选择"></a>2. “主动”选择</h4><p>&emsp;&emsp;何为“主动”选择？相比于“被动”选择，我们只做完备的前期数据处理，一次结果输出，即满足我们的结果。而不需要“被动”选择中用 直到型循环 去试结果。</p><p>&emsp;&emsp;可是，前期数据处理？这就难办了…</p><p><img src="/intro/money/bqb.jpg" width="200"></p><p><br><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;💬-写在最前&quot;&gt;&lt;a href=&quot;#💬-写在最前&quot; class=&quot;headerlink&quot; title=&quot;💬 写在最前&quot;&gt;&lt;/a&gt;💬 写在最前&lt;/h2&gt;&lt;p&gt;&amp;emsp;&amp;emsp;首先，新的一年，祝大家2020鼠年新春快乐啊！&lt;/p&gt;
&lt;p&gt;&lt;img sr
      
    
    </summary>
    
      <category term="IT" scheme="http://fmw666.github.io/categories/IT/"/>
    
    
      <category term="算法" scheme="http://fmw666.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
      <category term="抢红包" scheme="http://fmw666.github.io/tags/%E6%8A%A2%E7%BA%A2%E5%8C%85/"/>
    
  </entry>
  
  <entry>
    <title>《C语言》游戏开发基础</title>
    <link href="http://fmw666.github.io/2018-11-28/C%E8%AF%AD%E8%A8%80%E6%B8%B8%E6%88%8F%E5%BC%80%E5%8F%91%E5%9F%BA%E7%A1%80/"/>
    <id>http://fmw666.github.io/2018-11-28/C语言游戏开发基础/</id>
    <published>2018-11-28T06:02:20.000Z</published>
    <updated>2018-11-29T13:42:30.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="🚀-《C语言》游戏开发基础"><a href="#🚀-《C语言》游戏开发基础" class="headerlink" title="🚀 《C语言》游戏开发基础"></a>🚀 《C语言》游戏开发基础</h2><ul><li><strong>游戏框架搭建</strong><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 函数外全局变量定义</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    startup();  <span class="comment">// 数据初始化</span></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>) <span class="comment">//  游戏循环执行</span></span><br><span class="line">    &#123;</span><br><span class="line">        show();  <span class="comment">// 显示画面</span></span><br><span class="line">        updateWithoutInput();  <span class="comment">// 与用户输入无关的更新</span></span><br><span class="line">        updateWithInput();  <span class="comment">// 与用户输入有关的更新</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><p><strong><em>功能性</em></strong></p><ol><li><p><a href="#1">清屏函数</a></p></li><li><p><a href="#2">延时函数</a></p></li><li><p><a href="#3">停止等待函数</a></p></li><li><p><a href="#4">系统自带发出铃声</a></p></li><li><p><a href="#5">读取键盘上输入的值(需要回车)</a></p></li><li><p><a href="#6">读取键盘上输入的值(不需要回车)</a></p></li><li><p><a href="#7">判断是否有键盘输入的函数</a></p></li><li><p><a href="#8">产生随机数的函数</a></p></li><li><p><a href="#9">光标移动到原点位置进行重画(实现类似于清屏函数的效果)</a></p></li><li><p><a href="#10">隐藏光标显示函数</a></p></li><li><p><a href="#21">添加背景音乐</a></p></li><li><p><a href="#22">计时函数</a></p></li></ol><p><strong><em>窗口</em></strong></p><ol><li><p><a href="#11">修改窗口大小(静态)</a></p></li><li><p><a href="#12">修改窗口大小(动态)</a> </p></li><li><p><a href="#13">固定窗口大小</a></p></li><li><p><a href="#14">修改窗体风格</a></p></li><li><p><a href="#15">设置指定窗口的显示状态</a></p></li><li><p><a href="#16">修改窗口标题</a></p></li><li><p><a href="#17">弹出消息框</a></p></li><li><p><a href="#18">修改字体颜色、背景颜色 </a></p></li><li><p><a href="#19">修改文本颜色</a></p></li><li><p><a href="#20">修改窗体icon图标</a></p></li><li><p><a href="#23">修改窗体透明度</a></p></li></ol><p>  <a name="1"></a></p><ul><li><p><strong>清屏函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">system(<span class="string">"cls"</span>);</span><br></pre></td></tr></table></figure><p><a name="2"></a></p></li><li><p><strong>延时函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">Sleep(<span class="number">20</span>);    <span class="comment">//其中20的单位为毫秒</span></span><br></pre></td></tr></table></figure><p><a name="3"></a></p></li><li><p><strong>停止等待函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">system(<span class="string">"pause"</span>);</span><br></pre></td></tr></table></figure><p><a name="4"></a></p></li><li><p><strong>系统自带发出铃声</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">"\a"</span>);</span><br></pre></td></tr></table></figure><p><a name="5"></a></p></li><li><p><strong>读取键盘上输入的值(需要回车)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> input;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;input);</span><br><span class="line"><span class="keyword">if</span>(input==<span class="string">'w'</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"w"</span>);</span><br></pre></td></tr></table></figure><p><a name="6"></a></p></li><li><p><strong>读取键盘上输入的值(不需要回车)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> input;</span><br><span class="line"><span class="comment">//scanf("%c",&amp;input);</span></span><br><span class="line">input = getch();</span><br><span class="line"><span class="keyword">if</span>(input==<span class="string">'w'</span>)</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"w"</span>);</span><br></pre></td></tr></table></figure><p><a name="7"></a></p></li><li><p><strong>判断是否有键盘输入的函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line">kbhit();   <span class="comment">//若有则返回一个非0值，否则返回0</span></span><br></pre></td></tr></table></figure><blockquote><p>示例：</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> input;</span><br><span class="line">    <span class="keyword">if</span>(kbhit())&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>,&amp;input);    <span class="comment">//需要按下回车键来读取</span></span><br><span class="line">        <span class="comment">//input=getch();</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"按下了键\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> input;</span><br><span class="line">    <span class="keyword">if</span>(kbhit())&#123;</span><br><span class="line">        <span class="comment">//scanf("%c",&amp;input);    </span></span><br><span class="line">        input=getch();           <span class="comment">//不需要按下回车键来读取</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"按下了键\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="8"></a></p></li><li><p><strong>产生随机数的函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line">rand();</span><br></pre></td></tr></table></figure><p><a name="9"></a></p></li><li><p><strong>光标移动到原点位置进行重画(实现类似于清屏函数的效果)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">gotoxy</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span><span class="comment">//类似于清屏函数，光标移动到原点位置进行重画</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE handle = GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    COORD pos;</span><br><span class="line">    pos.X = x;</span><br><span class="line">    pos.Y = y;</span><br><span class="line">    SetConsoleCursorPosition(handle,pos);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gotoxy(<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="10"></a></p></li><li><p><strong>隐藏光标显示函数</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">HideCursor</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    CONSOLE_CURSOR_INFO cursor_info=&#123;<span class="number">1</span>,<span class="number">0</span>&#125;;   <span class="comment">//第二个值为0表示隐藏光标</span></span><br><span class="line">    SetConsoleCursorInfo(GetStdHandle(STD_OUTPUT_HANDLE),&amp;cursor_info);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HideCursor();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><a href="#目录">返回目录</a><br><a name="11"></a></p></li><li><p><strong>修改窗口大小(静态)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">system(<span class="string">"mode con cols=30 lines=20"</span>);  <span class="comment">//其中30为宽的值，20为高的值</span></span><br></pre></td></tr></table></figure><p><a name="12"></a></p></li><li><p><strong>修改窗口大小(动态)</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWinSize</span><span class="params">(<span class="keyword">int</span> height,<span class="keyword">int</span> width)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[<span class="number">20</span>];</span><br><span class="line">    <span class="built_in">sprintf</span>(str, <span class="string">"mode con: cols=%d lines=%d"</span>, height, width);</span><br><span class="line">    system(str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> height, width;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d"</span>, &amp;height, &amp;width);       <span class="comment">//输入高和宽的值</span></span><br><span class="line">    setWinSize(height,width);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="13"></a></p></li><li><p><strong>固定窗口大小</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">fixWinSize</span><span class="params">()</span>  </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HWND hWnd = GetConsoleWindow(); <span class="comment">//获得cmd窗口句柄</span></span><br><span class="line">    RECT rc;</span><br><span class="line">    GetWindowRect(hWnd, &amp;rc); <span class="comment">//获得cmd窗口对应矩形</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//改变cmd窗口风格</span></span><br><span class="line">    SetWindowLongPtr(hWnd,GWL_STYLE, GetWindowLong(hWnd, GWL_STYLE) &amp; ~WS_THICKFRAME &amp; ~WS_MAXIMIZEBOX &amp; ~WS_MINIMIZEBOX);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fixWinSize();</span><br></pre></td></tr></table></figure><p><a name="14"></a></p></li><li><p><strong>修改窗体风格</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWinLong</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HWND hwnd = GetConsoleWindow();</span><br><span class="line">    LONG Style;<span class="comment">//窗口风格</span></span><br><span class="line">    Style = GetWindowLong(hwnd, GWL_STYLE); <span class="comment">// 得到窗口风格</span></span><br><span class="line">    Style = Style &amp; ~WS_CAPTION; <span class="comment">//去掉标题栏，网上可查选</span></span><br><span class="line">    SetWindowLong(hwnd, GWL_STYLE, Style); <span class="comment">//为窗口设置新的风格</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><a name="15"></a></p></li><li><p><strong>设置指定窗口的显示状态</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">ShowWindow(FindWindowA(<span class="string">"ConsoleWindowClass"</span>,<span class="literal">NULL</span>),SW_HIDE);     <span class="comment">//隐藏窗口</span></span><br><span class="line">ShowWindow(FindWindowA(<span class="string">"ConsoleWindowClass"</span>,<span class="literal">NULL</span>),SW_SHOW);     <span class="comment">//显示窗口</span></span><br></pre></td></tr></table></figure><p><a name="16"></a></p></li><li><p><strong>修改窗口标题</strong></p><blockquote><p><strong><em>方法一：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">SetConsoleTitleA(<span class="string">"name"</span>);</span><br></pre></td></tr></table></figure><blockquote><p><strong><em>方法二：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">system(<span class="string">"title name"</span>);</span><br></pre></td></tr></table></figure><p><a name="17"></a></p></li><li><p><strong>弹出消息框</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line">MessageBoxA(<span class="number">0</span>,<span class="string">"内容"</span>,<span class="string">"标题"</span>,MB_OK|MB_SYSTEMMODAL);  <span class="comment">//MB_OK表示有确认键，MB_SYSTEMMODAL表示在窗口置顶</span></span><br></pre></td></tr></table></figure><p><a name="18"></a></p></li><li><p><strong>修改字体颜色、背景颜色</strong></p><blockquote><p><strong><em>方法一：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">system(<span class="string">"color 07"</span>);     <span class="comment">//(07)为默认的黑底白字。其中0为背景色，7为前景色</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">颜色属性由两个十六进制数字指定 </span></span><br><span class="line"><span class="comment">-- 第一个为背景色，第二个则为前景色。</span></span><br><span class="line"><span class="comment">每个数字可以为以下任何值之一:</span></span><br><span class="line"><span class="comment">0 = 黑色 8 = 灰色</span></span><br><span class="line"><span class="comment">1 = 蓝色 9 = 淡蓝色</span></span><br><span class="line"><span class="comment">2 = 绿色 A = 淡绿色</span></span><br><span class="line"><span class="comment">3 = 湖蓝色 B = 淡浅绿色</span></span><br><span class="line"><span class="comment">4 = 红色 C = 淡红色</span></span><br><span class="line"><span class="comment">5 = 紫色 D = 淡紫色</span></span><br><span class="line"><span class="comment">6 = 黄色 E = 淡黄色</span></span><br><span class="line"><span class="comment">7 = 白色 F = 亮白色</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><blockquote><p><strong><em>方法二：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> BackGroundColor,<span class="keyword">unsigned</span> <span class="keyword">short</span> ForeColor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hCon=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleTextAttribute(hCon,(ForeColor%<span class="number">16</span>)|(BackGroundColor%<span class="number">16</span>*<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">SetColor(<span class="number">0</span>,<span class="number">7</span>);   <span class="comment">//(0,7)为默认的黑底白字。其中0为背景色，7为前景色</span></span><br></pre></td></tr></table></figure><blockquote><p><strong><em>示例：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">SetColor</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">short</span> BackGroundColor,<span class="keyword">unsigned</span> <span class="keyword">short</span> ForeColor)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HANDLE hCon=GetStdHandle(STD_OUTPUT_HANDLE);</span><br><span class="line">    SetConsoleTextAttribute(hCon,(ForeColor%<span class="number">16</span>)|(BackGroundColor%<span class="number">16</span>*<span class="number">16</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    system(<span class="string">"color 70"</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"方法一\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;i,&amp;j))</span><br><span class="line">    &#123;</span><br><span class="line">        SetColor(i,j);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"方法二\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/18/5bf0d8d1cd1eb.png" alt="color.png"><br><a name="19"></a></p></li><li><p><strong>修改文本颜色</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line">SetConsoleTextAttribute(GetStdHandle(STD_OUTPUT_HANDLE), <span class="number">2</span>);<span class="comment">//设置颜色</span></span><br></pre></td></tr></table></figure><p><a name="21"></a></p></li><li><p><strong>添加背景音乐</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 只在VC上支持</span></span><br></pre></td></tr></table></figure><p><a name="22"></a></p></li><li><p><strong>计数函数</strong></p><blockquote><p><strong><em>方法一：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">clock_t</span> start,end;</span><br><span class="line">    start = clock();</span><br><span class="line"></span><br><span class="line">    Sleep(<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">    end = clock();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"time=%f\n"</span>,(<span class="keyword">double</span>)(end-start)/CLK_TCK);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong><em>方法二：</em></strong></p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    DWORD end,start;</span><br><span class="line">    start= GetTickCount();</span><br><span class="line"></span><br><span class="line">    Sleep(<span class="number">2000</span>);</span><br><span class="line"></span><br><span class="line">    end= GetTickCount();</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"time=%d\n"</span>,end-start);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>修改字体大小</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//暂未</span></span><br></pre></td></tr></table></figure><p><a name="20"></a></p></li><li><p><strong>修改窗体icon图标</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Dev-C++ 新建项目-&gt;`Ctrl+H`(项目属性)</span><br></pre></td></tr></table></figure><p><a name="23"></a></p></li><li><p><strong>修改窗体透明度</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWinTransparent</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    HWND hwnd = GetConsoleWindow();</span><br><span class="line">    <span class="keyword">int</span> ExdStyle = (<span class="keyword">int</span>)GetWindowLong(hwnd, GWL_EXSTYLE);</span><br><span class="line">    <span class="comment">//通过SetWindowLong设置窗口的属性，多增加了一个WS_EX_LAYERED支持透明</span></span><br><span class="line">    SetWindowLong(hwnd, GWL_EXSTYLE, ExdStyle | WS_EX_LAYERED);</span><br><span class="line">    SetLayeredWindowAttributes(GetConsoleWindow(),RGB(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>), <span class="number">200</span>, LWA_ALPHA);<span class="comment">//200为透明度值（0-255）</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    setWinTransparent();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p><strong>键盘输入上下左右，回车确定，Esc退出</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> input;</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">    input=getch();</span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">27</span>)&#123;            <span class="comment">//Esc键ASCII码为27</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">13</span>)&#123;            <span class="comment">//回车键ASCII码为13</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input!=<span class="number">-32</span>) <span class="keyword">continue</span>;  <span class="comment">//避免因从键盘上输入的其他无关值影响程序进行</span></span><br><span class="line">    input=getch();            <span class="comment">//在读取上下左右ASCII码前必须添加</span></span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">72</span>)&#123;            <span class="comment">//上的ASCII码为72</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">80</span>)&#123;            <span class="comment">//下的ASCII码为80</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">75</span>)&#123;            <span class="comment">//左的ASCII码为75</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(input==<span class="number">77</span>)&#123;            <span class="comment">//右的ASCII码为77</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br><br><br><a href="#目录">返回目录</a><br><br><br><br></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;🚀-《C语言》游戏开发基础&quot;&gt;&lt;a href=&quot;#🚀-《C语言》游戏开发基础&quot; class=&quot;headerlink&quot; title=&quot;🚀 《C语言》游戏开发基础&quot;&gt;&lt;/a&gt;🚀 《C语言》游戏开发基础&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;游戏框架搭建&lt;/
      
    
    </summary>
    
      <category term="IT" scheme="http://fmw666.github.io/categories/IT/"/>
    
    
      <category term="C语言" scheme="http://fmw666.github.io/tags/C%E8%AF%AD%E8%A8%80/"/>
    
      <category term="游戏" scheme="http://fmw666.github.io/tags/%E6%B8%B8%E6%88%8F/"/>
    
  </entry>
  
  <entry>
    <title>git教程</title>
    <link href="http://fmw666.github.io/2018-11-02/git%E6%95%99%E7%A8%8B/"/>
    <id>http://fmw666.github.io/2018-11-02/git教程/</id>
    <published>2018-11-02T11:18:43.000Z</published>
    <updated>2018-11-03T13:54:32.000Z</updated>
    
    <content type="html"><![CDATA[<p><em>⚡<a href>Git</a>是目前世界上最先进的分布式版本控制系统（没有之一）。</em><br><br><br></p><h2 id="在Windows上安装Git"><a href="#在Windows上安装Git" class="headerlink" title="在Windows上安装Git"></a>在<a href>Windows</a>上安装<a href>Git</a></h2><p><hr></p><blockquote><p><a href="https://git-scm.com/downloads" target="_blank" rel="noopener">Git官网</a>直接下载安装程序，（网速慢的同学请移步<a href="https://pan.baidu.com/s/1kU5OCOB#list/path=%2Fpub%2Fgit" target="_blank" rel="noopener">国内镜像</a>）</p></blockquote><ul><li><p>安装完成后，在开始菜单里找到<code>&quot;Git&quot;-&gt;&quot;Git Bash&quot;</code>,进行如下配置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Your Name&quot;  </span><br><span class="line">$ git config --global user.email &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>生成相应的令牌，本地一份，Github 一份，这样 Github 可以在你使用仓库的时候，进行校验确定你的身份。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ cd ~/.ssh</span><br><span class="line">$ mkdir key_backup</span><br><span class="line">$ ssh-keygen -t rsa -C &quot;email@example.com&quot;</span><br></pre></td></tr></table></figure></li><li><p>生成如下两个文件：</p><p><img src="https://i.loli.net/2018/11/01/5bdb01c742769.png" alt="git.png"></p><blockquote><p><code>id_rsa.pub</code> 就是我们待会需要的公钥文件，使用命令 <code>$ cat id_rsa.pub</code> 再将内容复制到剪切板，然后进入github账号设置里面添加SSH key</p></blockquote><p>然后输入 <code>$ ssh -T git@github.com</code> 测试连通状态<br><br><br></p></li></ul><h2 id="创建本地仓库"><a href="#创建本地仓库" class="headerlink" title="创建本地仓库"></a>创建本地仓库</h2><p><hr></p><ul><li>选择一个本地文件夹，用作保存本地仓库文件，尽量是空文件夹。</li><li><p>然后使用命令 <code>$ git init</code> 初始化文件夹。</p><blockquote><p>其实是在当前文件夹下生成一个叫 <code>.git</code> 的隐藏文件夹，里面是一些配置文件，不要随意更改。</p></blockquote></li><li><p>使用 <code>$ git clone https://github.com/name/repository.git</code> 将远程仓库克隆到本地此文件夹下。</p><blockquote><p><a href>name</a> 是自己的昵称，<a href>repository</a> 是自己的仓库名，不要忘记末尾的 <code>.git</code> 后缀。</p></blockquote></li><li><p>然后此文件夹下会多一个和你仓储名一样的文件夹，内部文件与远程仓库一样。<br><br><br></p></li></ul><h2 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h2><p><hr><br>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ git add . //添加文件</span><br><span class="line">$ git commit -m &quot;commit-messages&quot; //提交本地仓库</span><br><span class="line">$ git push origin master //提交远程仓库</span><br><span class="line">$ git pull //拉取远程文件，与以下命令类似</span><br><span class="line">$ git branch temp //创建本地分支</span><br><span class="line">$ git fetch origin master:temp</span><br><span class="line">$ git merge master</span><br></pre></td></tr></table></figure></p><p><br><br></p><h2 id="图床介绍"><a href="#图床介绍" class="headerlink" title="图床介绍"></a>图床介绍</h2><p><hr><br>  <em>写博客就无法避免上传图片，图床就是这么一个地方，就是一个网站，你发自己的图片上传到它的网站，然后它给你一个这个图片的链接，插入博客中就能显示图片了。</em></p><ul><li>推荐一个知名的，七牛云<a href="https://portal.qiniu.com/" target="_blank" rel="noopener">https://portal.qiniu.com/</a>，注册完实名认证后有一些优惠。 </li><li>还有一个神奇的网站：<a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a>，也能用<br><br><br></li></ul><h2 id="Hexo-github博客搭建"><a href="#Hexo-github博客搭建" class="headerlink" title="Hexo+github博客搭建"></a>Hexo+github博客搭建</h2><p><hr></p><ul><li>推荐一个CSDN博主的文章，<a href="https://blog.csdn.net/Mr_yu_java/article/details/81077064" target="_blank" rel="noopener">点击这里</a></li><li>一个git用户很详细的分享，<a href="https://hans2936.github.io/2018/06/06/HexoLog/" target="_blank" rel="noopener">点击这里</a></li><li>当然，官方教程更全面，<a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="noopener">点击这里</a></li></ul><p><strong><em>这里分享一篇我的总结，<a href="https://github.com/fmw666/Git/blob/master/Hexo%20%2B%20Github%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.md" target="_blank" rel="noopener">点击这里</a></em></strong></p><p><br><br><br><br><br></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;em&gt;⚡&lt;a href&gt;Git&lt;/a&gt;是目前世界上最先进的分布式版本控制系统（没有之一）。&lt;/em&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;在Windows上安装Git&quot;&gt;&lt;a href=&quot;#在Windows上安装Git&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="IT" scheme="http://fmw666.github.io/categories/IT/"/>
    
    
      <category term="git" scheme="http://fmw666.github.io/tags/git/"/>
    
      <category term="后台" scheme="http://fmw666.github.io/tags/%E5%90%8E%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://fmw666.github.io/2018-11-01/hello-world/"/>
    <id>http://fmw666.github.io/2018-11-01/hello-world/</id>
    <published>2018-10-31T16:00:00.000Z</published>
    <updated>2018-11-02T21:03:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
